// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopQuanAo.Models;

#nullable disable

namespace ShopQuanAo.Migrations
{
    [DbContext(typeof(LTWEBContext))]
    [Migration("20231025081645_add_table")]
    partial class add_table
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ShopQuanAo.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<int?>("Idrole")
                        .HasColumnType("int")
                        .HasColumnName("idrole");

                    b.Property<string>("Password")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex("Idrole");

                    b.ToTable("accounts", (string)null);
                });

            modelBuilder.Entity("ShopQuanAo.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("category", (string)null);
                });

            modelBuilder.Entity("ShopQuanAo.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("address");

                    b.Property<DateTime?>("Createdate")
                        .HasColumnType("date")
                        .HasColumnName("createdate");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Fullname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fullname");

                    b.Property<int?>("Idaccount")
                        .HasColumnType("int")
                        .HasColumnName("idaccount");

                    b.Property<string>("Phone")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("phone");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("total");

                    b.HasKey("Id");

                    b.HasIndex("Idaccount");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("ShopQuanAo.Models.Orderdetail", b =>
                {
                    b.Property<int>("Idorder")
                        .HasColumnType("int")
                        .HasColumnName("idorder");

                    b.Property<int>("Idproduct")
                        .HasColumnType("int")
                        .HasColumnName("idproduct");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("price");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<decimal?>("Subtotal")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("subtotal");

                    b.HasKey("Idorder", "Idproduct");

                    b.HasIndex("Idproduct");

                    b.ToTable("orderdetails", (string)null);
                });

            modelBuilder.Entity("ShopQuanAo.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("ntext")
                        .HasColumnName("description");

                    b.Property<int?>("IdProductImage")
                        .HasColumnType("int");

                    b.Property<int?>("Idcategory")
                        .HasColumnType("int")
                        .HasColumnName("idcategory");

                    b.Property<string>("Image")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("name");

                    b.Property<bool?>("Newproduct")
                        .HasColumnType("bit")
                        .HasColumnName("newproduct");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("price");

                    b.Property<decimal?>("Promationprice")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("promationprice");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("Id");

                    b.HasIndex("Idcategory");

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("ShopQuanAo.Models.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("IdProduct")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdProduct")
                        .IsUnique()
                        .HasFilter("[IdProduct] IS NOT NULL");

                    b.ToTable("ProductImage");
                });

            modelBuilder.Entity("ShopQuanAo.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("role", (string)null);
                });

            modelBuilder.Entity("ShopQuanAo.Models.Account", b =>
                {
                    b.HasOne("ShopQuanAo.Models.Role", "IdroleNavigation")
                        .WithMany("Accounts")
                        .HasForeignKey("Idrole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_accounts_role");

                    b.Navigation("IdroleNavigation");
                });

            modelBuilder.Entity("ShopQuanAo.Models.Order", b =>
                {
                    b.HasOne("ShopQuanAo.Models.Account", "IdaccountNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("Idaccount")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_orders_accounts");

                    b.Navigation("IdaccountNavigation");
                });

            modelBuilder.Entity("ShopQuanAo.Models.Orderdetail", b =>
                {
                    b.HasOne("ShopQuanAo.Models.Order", "IdorderNavigation")
                        .WithMany("Orderdetails")
                        .HasForeignKey("Idorder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_orderdetails_orders");

                    b.HasOne("ShopQuanAo.Models.Product", "IdproductNavigation")
                        .WithMany("Orderdetails")
                        .HasForeignKey("Idproduct")
                        .IsRequired()
                        .HasConstraintName("FK_orderdetails_products");

                    b.Navigation("IdorderNavigation");

                    b.Navigation("IdproductNavigation");
                });

            modelBuilder.Entity("ShopQuanAo.Models.Product", b =>
                {
                    b.HasOne("ShopQuanAo.Models.Category", "IdcategoryNavigation")
                        .WithMany("Products")
                        .HasForeignKey("Idcategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_products_category");

                    b.Navigation("IdcategoryNavigation");
                });

            modelBuilder.Entity("ShopQuanAo.Models.ProductImage", b =>
                {
                    b.HasOne("ShopQuanAo.Models.Product", "Product")
                        .WithOne("IdproductImage")
                        .HasForeignKey("ShopQuanAo.Models.ProductImage", "IdProduct");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ShopQuanAo.Models.Account", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ShopQuanAo.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ShopQuanAo.Models.Order", b =>
                {
                    b.Navigation("Orderdetails");
                });

            modelBuilder.Entity("ShopQuanAo.Models.Product", b =>
                {
                    b.Navigation("IdproductImage");

                    b.Navigation("Orderdetails");
                });

            modelBuilder.Entity("ShopQuanAo.Models.Role", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
